[gcode_macro M3]  # start the spindle clockwise at the specified speed S
gcode:
    {% set S = params.S|default(0.0)|float %}

    # Store the target speed in the client variable
    SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=speed_tool VALUE={S}
    SET_PIN PIN=PIN_SPINDLE_SPEED_CONTROL VALUE={S / 24000}
    
    {% if S==0 %}
        SET_PIN PIN=SPINDLE_FWD VALUE=0 # stop fwd
        SET_PIN PIN=SPINDLE_REV VALUE=0 # stop rev
    {% else %}
        SET_PIN PIN=SPINDLE_FWD VALUE=1 # start fwd
        SET_PIN PIN=SPINDLE_REV VALUE=0 # stop rev
    {% endif %}
    G4 P10000

[gcode_macro M4] # start the selected spindle counterclockwise at the S speed
gcode:
    {% set S = params.S|default(0.0)|float %}

    # Store the target speed in the client variable
    SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=speed_tool VALUE={S}
    SET_PIN PIN=PIN_SPINDLE_SPEED_CONTROL VALUE={S / 24000}
    
    {% if S==0 %}
        SET_PIN PIN=SPINDLE_FWD VALUE=0 # stop fwd
        SET_PIN PIN=SPINDLE_REV VALUE=0 # stop rev
    {% else %}
        SET_PIN PIN=SPINDLE_FWD VALUE=0 # stop fwd
        SET_PIN PIN=SPINDLE_REV VALUE=1 # start rev
    {% endif %}
    G4 P10000

[gcode_macro M5]
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set speed = client.speed_tool %}
    {% set decel_steps = client.step_decel_count %}
    {% set time_per_step = client.step_decel_time %}  # Time in milliseconds for each step
    
    {% for i in range(decel_steps, 0, -1) %}
        M3 S{ (speed * i) / decel_steps }
        G4 P{ time_per_step }
    {% endfor %}
    
    SET_PIN PIN=SPINDLE_FWD VALUE=0 # stop fwd
    SET_PIN PIN=SPINDLE_REV VALUE=0 # stop rev
    SET_PIN PIN=PIN_SPINDLE_SPEED_CONTROL VALUE=0
    SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=speed_tool VALUE=0

[gcode_macro SPINDLE_EMERGENCY_STOP]
gcode:
    SET_PIN PIN=PIN_SPINDLE_SPEED_CONTROL VALUE=0
    SET_GCODE_VARIABLE MACRO=_CLIENT_VARIABLE VARIABLE=speed_tool VALUE=0

[gcode_button kill_switch] # stop spindle when door is open
    pin=PG11 # diag 3
    press_gcode=
        {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
        {% set is_milling = client.is_milling|default(0) %}
        {% if is_milling %}
            M117 "Door opened, pausing milling"
            SPINDLE_EMERGENCY_STOP
            M112
        {% elif client.override_door_open %}
            M117 "Door opened and milling, but door override is enabled"
        {% else %}
            M117 "Door opened"
        {% endif %}
    release_gcode=
        M117 "Door closed"
